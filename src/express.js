// const express = require("express");
import express from "express";
import cors from "cors";
import bodyParser from "body-parser";
import { bind1WithWeb3Proof, createProposal, vote } from "./api/index.js";

import FormData from "form-data";
import * as fs from "fs";
import * as path from "path";
import axios from "axios";

const chain_name = process.env.CHAIN_NAME; // "TONtest";
const app = express();
app.use(cors());
app.use(bodyParser.json());

app.get("/", (req, res) => {
  res.send("Hello Soton!");
});

app.post("/api/new-proposal", async (req, res) => {
  console.log("req: ", req.body);
  try {
    const data = req.body;
    const resp = await createProposal(data);
    res.json(resp);
  } catch (e) {
    res.json(e);
  }
});

app.post("/api/vote", async (req, res) => {
  console.log("req: ", req.body);
  try {
    const data = req.body;
    const params = {
      addr: data.address,
      tid: data.username,
      sig: "",
      platform: "Telegram",
      chain_name,
    };
    const resp = await vote(data);
    res.json(resp);
  } catch (e) {
    res.json(e);
  }
});

app.post("/api/bind", async (req, res) => {
  try {
    const data = req.body;
    const resp = await bind1WithWeb3Proof(data);
    res.json(resp);
  } catch (e) {
    res.json(e);
  }
});

app.post("/api/sdCallback", async (req, res) => {
  const { prompt, extra, image } = req.body;
  const extraJson = JSON.parse(extra);
  const imgBuffer = Buffer.from(img, "base64");

  var s = new Readable();
  s.push(imgBuffer);
  s.push(null);
  s.pipe(fs.createWriteStream("test.png"));

  const form = new FormData();
  const buffer = Buffer.from(imgBuffer, "base64");
  // Create a form and append image with additional fields
  // or/and
  const filePath = path.resolve(process.cwd(), "test.png");
  console.log(filePath);
  const fileStream = fs.createReadStream(filePath);
  form.append("photo", fileStream);
  form.append("caption", "Generated by prompt");
  form.append("chat_id", extra.chat_id);
  form.append("reply_to_message_id", extra.message_id);
  const reply_markup = {
    inline_keyboard: [
      [
        {
          text: "Mint",
          callback_data: "mint_prompt",
        },
      ],
    ],
  };
  form.append("reply_markup", reply_markup);
  // Send form data with axios
  try {
    const botToken = process.env.BOT_TOKEN;
    const url = `https://api.telegram.org/bot${botToken}/sendPhoto`;
    const response = await axios.request({
      url,
      method: "POST",
      requestType: "form",
      data: form,
    });

    console.log(response.data);
    // delete temp img
    fs.unlinkSync(filePath);
  } catch (e) {
    console.log(e);
  }
});

// app.listen(port, () => {
//   console.log(`Example app listening on port ${port}`);
// });
export default app;
